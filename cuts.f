************************************************************************
***************************|-------------------|************************
***************************|Program: CUTS.f    |************************
***************************|-------------------|************************
************************************************************************
**********************|------------------------------|******************
**********************| Last modified: 27.12.2009    |******************
**********************|------------------------------|******************
************************************************************************
********|-------------------------------------------------------|*******
********| Constructs the kinematic variables and imposes all the|*******
********| kinematics cuts on the cross-section. The subroutine  |*******
********| returns an integer INDX = 0 if the point passes all   |*******
********| cuts without error and INDX = 1 otherwise.            |*******
********|-------------------------------------------------------|*******
************************************************************************
************************************************************************
          SUBROUTINE KINCUT(INDX)
*--declarations--------------------------------------------------------*
          IMPLICIT REAL*8 (A-H,M,O-Z)
          COMMON /PARTCL/ P(5,30),M(2,30)
          COMMON /CUTS/ NCUT(30), NERR(30)
          common/distrib/var(30)
          COMMON/PDFINFO/ALPHAS,MH
*---*************************************************************---*
                   IFL  = 0
		   RAD2DEG = 57.29578d0
                   PI     = DACOS(-1.0d0)
*---*************************************************************---*
C$$$                            do i =1, 30
C$$$                              var(i) = 0.d0
C$$$                            enddo
C$$$            call ANGLE(4,6,A46,IFL)
C$$$                           if (ifl .ne. 0) then
C$$$                                           indx = 1       
C$$$                                           return
C$$$                           endif
C$$$            call ANGLE(4,7,A47,IFL)
C$$$                           if (ifl .ne. 0) then
C$$$                                           indx = 1       
C$$$                                           return
C$$$                           endif
C$$$            call ANGLE(5,6,A56,IFL)
C$$$                           if (ifl .ne. 0) then
C$$$                                           indx = 1       
C$$$                                           return
C$$$                           endif
C$$$            call ANGLE(5,7,A57,IFL)
C$$$                           if (ifl .ne. 0) then
C$$$                                           indx = 1       
C$$$                                           return
C$$$                           endif
C$$$            call ANGLE(6,7,A67,IFL)
C$$$                           if (ifl .ne. 0) then
C$$$                                           indx = 1       
C$$$                                           return
C$$$                           endif
C$$$*......................................................................*
C$$$              var(1) = DCOS(A46)
C$$$              var(2) = a47 * rad2deg
C$$$              var(3) = a56 * rad2deg
C$$$              var(4) = a57 * rad2deg
C$$$              var(5) = a67 * rad2deg

C$$$              PT4=SQRT(P(1,4)**2+P(2,4)**2)
C$$$              PT6=SQRT(P(1,6)**2+P(2,6)**2)

C$$$              VAR(6) = 4.0D0*PT4**2/MH**2
C$$$              VAR(7) = 4.0D0*PT6**2/MH**2

C$$$              VAR(8) = PT4
C$$$              VAR(9) = PT6

C$$$              WRITE(101,*) VAR(8),VAR(6)

C$$$*--Go back to main program---------------------------------------------*
        RETURN
        END
************************************************************************
